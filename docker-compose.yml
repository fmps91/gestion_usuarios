version: "3"

services:
  database:
    container_name: database
    hostname: localhost
    image: postgres:11-alpine
    restart: always
    #expose:
      #- 8091
    #ports: 
      #- 8091:5432 
    #command: postgres -c config_file=/etc/postgresql/postgresql.conf
    #args:
      #a: a_value
      
    environment: 
   
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=users
      - PGDATA=/var/lib/postgresql/data/pgdata

    volumes:
      #- ./postgres.conf:/etc/postgresql/postgresql.conf
      - ./gestion_users.sql:/docker-entrypoint-initdb.d/schema.sql

  springbootapp:
    build: .
    container_name: gestion_usuarios
    
    ports:
      - 8090:8080
    #command: sh -c "dockerize -wait tcp://postgres:8091 -timeout 300s -wait-retry-interval 30s /sayhello"
    #networks:
      #- back-tier
    #expose:
    #  - 8090
    restart: always
    #ports:
      #- 8090:8080
    environment:
      - DB_SERVER=database
      - POSTGRES_DB=users
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    links:
      - database
    networks:
      front_some-net
    #depends_on:
    #  - database
      #- back-tier     
    #depends_on:
    #  - database
  

    
    #volumes:
      #- ./postgres:/var/lib/postgresql/data

    #env_file:
    #  - database.env # configure postgres
    #volumes:
    #  - database-data:/var/lib/postgresql/data/
  
networks:
  front-tier:
  back-tier:
  front_some-net:
    external: true
    